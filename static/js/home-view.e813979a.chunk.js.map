{"version":3,"file":"static/js/home-view.e813979a.chunk.js","mappings":"oSAAMA,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAOO,SAASC,IACZ,OAAOV,EAAuB,2DAAD,OACkCD,IAG5D,SAASY,EAAkBC,GAC9B,OAAOZ,EAAuB,sCAAD,OACaY,EADb,oBACgCb,EADhC,oBAK1B,SAASc,EAAkBD,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,yDAAD,OACuBD,EADvB,iCACuDiB,EADvD,kC,0EC9BhB,SAASC,EAAeC,GACnC,OACIA,IACI,wBACKA,EAAKA,KAAKC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eAClB,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADvBD,U,kHCLlB,SAASG,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KAAyBC,KAAKH,GAC9BI,OAAOC,eAAeC,QAAQ,YAAa,OAE5C,KAIC,8BACKP,IACG,iCACI,4CACA,SAAC,IAAD,CAAgBP,KAAMO,EAAOQ","sources":["API/API.js","components/MoviesLinkList/MoviesLinkList.jsx","pages/HomeView/HomeView.js"],"sourcesContent":["const API_KEY = 'f6b9004a74710edf774660656e9f2aad';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n    return fetchWithErrorHandling(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieDetails(movieId) {\n    return fetchWithErrorHandling(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n   \n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(`\n  https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesLinkList(data) {\n    return (\n        data && (\n            <ul>\n                {data.data.map(({ id, original_title }) => {\n                    return (\n                        <li key={id}>\n                            <Link to={`/movies/${id}`}>{original_title}\n\n                                \n                            </Link>\n\n                        </li>\n                    );\n                }\n                )}\n            </ul>\n        )\n    );\n}\n\nMoviesLinkList.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ),\n};","import { useState, useEffect } from \"react\";\nimport * as movieApi from '../../API/API';\nimport MoviesLinkList from \"../../components/MoviesLinkList/MoviesLinkList.jsx\";\n\nexport default function HomeView() {\n    const [movies, setMovies] = useState(null);\n    useEffect(() => {\n        movieApi.fetchTrending().then(setMovies);\n        window.sessionStorage.setItem('prevRoute', '/');\n     \n    }, []);\n\n\n    return (\n        <>\n            {movies && (\n                <>\n                    <h2>Trending today</h2>\n                    <MoviesLinkList data={movies.results} />\n                </>\n            )}\n        </>\n    );\n}\n\n"],"names":["API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query","MoviesLinkList","data","map","id","original_title","to","HomeView","useState","movies","setMovies","useEffect","movieApi","then","window","sessionStorage","setItem","results"],"sourceRoot":""}